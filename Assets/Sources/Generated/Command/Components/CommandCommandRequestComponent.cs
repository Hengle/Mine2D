//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    static readonly svanderweele.Mine.Game.Pieces.Commands.Components.CommandRequestComponent commandRequestComponent = new svanderweele.Mine.Game.Pieces.Commands.Components.CommandRequestComponent();

    public bool isCommandRequest {
        get { return HasComponent(CommandComponentsLookup.CommandRequest); }
        set {
            if (value != isCommandRequest) {
                var index = CommandComponentsLookup.CommandRequest;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : commandRequestComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandRequest;

    public static Entitas.IMatcher<CommandEntity> CommandRequest {
        get {
            if (_matcherCommandRequest == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandRequest);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandRequest = matcher;
            }

            return _matcherCommandRequest;
        }
    }
}
