//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FactoryContext {

    public FactoryEntity tileFactoryEntity { get { return GetGroup(FactoryMatcher.TileFactory).GetSingleEntity(); } }
    public svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent tileFactory { get { return tileFactoryEntity.tileFactory; } }
    public bool hasTileFactory { get { return tileFactoryEntity != null; } }

    public FactoryEntity SetTileFactory(svanderweele.Mine.Game.Factories.Tile.ITileFactory newFactory) {
        if (hasTileFactory) {
            throw new Entitas.EntitasException("Could not set TileFactory!\n" + this + " already has an entity with svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent!",
                "You should check if the context already has a tileFactoryEntity before setting it or use context.ReplaceTileFactory().");
        }
        var entity = CreateEntity();
        entity.AddTileFactory(newFactory);
        return entity;
    }

    public void ReplaceTileFactory(svanderweele.Mine.Game.Factories.Tile.ITileFactory newFactory) {
        var entity = tileFactoryEntity;
        if (entity == null) {
            entity = SetTileFactory(newFactory);
        } else {
            entity.ReplaceTileFactory(newFactory);
        }
    }

    public void RemoveTileFactory() {
        tileFactoryEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FactoryEntity {

    public svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent tileFactory { get { return (svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent)GetComponent(FactoryComponentsLookup.TileFactory); } }
    public bool hasTileFactory { get { return HasComponent(FactoryComponentsLookup.TileFactory); } }

    public void AddTileFactory(svanderweele.Mine.Game.Factories.Tile.ITileFactory newFactory) {
        var index = FactoryComponentsLookup.TileFactory;
        var component = CreateComponent<svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent>(index);
        component.factory = newFactory;
        AddComponent(index, component);
    }

    public void ReplaceTileFactory(svanderweele.Mine.Game.Factories.Tile.ITileFactory newFactory) {
        var index = FactoryComponentsLookup.TileFactory;
        var component = CreateComponent<svanderweele.Mine.Game.Factories.Tile.TileFactoryComponent>(index);
        component.factory = newFactory;
        ReplaceComponent(index, component);
    }

    public void RemoveTileFactory() {
        RemoveComponent(FactoryComponentsLookup.TileFactory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class FactoryMatcher {

    static Entitas.IMatcher<FactoryEntity> _matcherTileFactory;

    public static Entitas.IMatcher<FactoryEntity> TileFactory {
        get {
            if (_matcherTileFactory == null) {
                var matcher = (Entitas.Matcher<FactoryEntity>)Entitas.Matcher<FactoryEntity>.AllOf(FactoryComponentsLookup.TileFactory);
                matcher.componentNames = FactoryComponentsLookup.componentNames;
                _matcherTileFactory = matcher;
            }

            return _matcherTileFactory;
        }
    }
}
