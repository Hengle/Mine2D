//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridEntitiesComponent gridEntities { get { return (GridEntitiesComponent)GetComponent(GameComponentsLookup.GridEntities); } }
    public bool hasGridEntities { get { return HasComponent(GameComponentsLookup.GridEntities); } }

    public void AddGridEntities(int[][,] newEntities) {
        var index = GameComponentsLookup.GridEntities;
        var component = CreateComponent<GridEntitiesComponent>(index);
        component.Entities = newEntities;
        AddComponent(index, component);
    }

    public void ReplaceGridEntities(int[][,] newEntities) {
        var index = GameComponentsLookup.GridEntities;
        var component = CreateComponent<GridEntitiesComponent>(index);
        component.Entities = newEntities;
        ReplaceComponent(index, component);
    }

    public void RemoveGridEntities() {
        RemoveComponent(GameComponentsLookup.GridEntities);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridEntities;

    public static Entitas.IMatcher<GameEntity> GridEntities {
        get {
            if (_matcherGridEntities == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridEntities);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridEntities = matcher;
            }

            return _matcherGridEntities;
        }
    }
}
