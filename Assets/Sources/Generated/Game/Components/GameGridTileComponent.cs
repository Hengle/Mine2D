//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridTileComponent gridTile { get { return (GridTileComponent)GetComponent(GameComponentsLookup.GridTile); } }
    public bool hasGridTile { get { return HasComponent(GameComponentsLookup.GridTile); } }

    public void AddGridTile(int[] newEntities) {
        var index = GameComponentsLookup.GridTile;
        var component = CreateComponent<GridTileComponent>(index);
        component.Entities = newEntities;
        AddComponent(index, component);
    }

    public void ReplaceGridTile(int[] newEntities) {
        var index = GameComponentsLookup.GridTile;
        var component = CreateComponent<GridTileComponent>(index);
        component.Entities = newEntities;
        ReplaceComponent(index, component);
    }

    public void RemoveGridTile() {
        RemoveComponent(GameComponentsLookup.GridTile);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridTile;

    public static Entitas.IMatcher<GameEntity> GridTile {
        get {
            if (_matcherGridTile == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridTile);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridTile = matcher;
            }

            return _matcherGridTile;
        }
    }
}
