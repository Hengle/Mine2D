//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public svanderweele.Core.Pieces.Map.Components.MapObjectsComponent mapObjects { get { return (svanderweele.Core.Pieces.Map.Components.MapObjectsComponent)GetComponent(GameComponentsLookup.MapObjects); } }
    public bool hasMapObjects { get { return HasComponent(GameComponentsLookup.MapObjects); } }

    public void AddMapObjects(System.Collections.Generic.List<int> newObjects) {
        var index = GameComponentsLookup.MapObjects;
        var component = CreateComponent<svanderweele.Core.Pieces.Map.Components.MapObjectsComponent>(index);
        component.objects = newObjects;
        AddComponent(index, component);
    }

    public void ReplaceMapObjects(System.Collections.Generic.List<int> newObjects) {
        var index = GameComponentsLookup.MapObjects;
        var component = CreateComponent<svanderweele.Core.Pieces.Map.Components.MapObjectsComponent>(index);
        component.objects = newObjects;
        ReplaceComponent(index, component);
    }

    public void RemoveMapObjects() {
        RemoveComponent(GameComponentsLookup.MapObjects);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMapObjects;

    public static Entitas.IMatcher<GameEntity> MapObjects {
        get {
            if (_matcherMapObjects == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MapObjects);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMapObjects = matcher;
            }

            return _matcherMapObjects;
        }
    }
}
