//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity gridEditorServiceEntity { get { return GetGroup(MetaMatcher.GridEditorService).GetSingleEntity(); } }
    public svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent gridEditorService { get { return gridEditorServiceEntity.gridEditorService; } }
    public bool hasGridEditorService { get { return gridEditorServiceEntity != null; } }

    public MetaEntity SetGridEditorService(svanderweele.Mine.Core.Pieces.GridEditor.Service.IGridEditorService newService) {
        if (hasGridEditorService) {
            throw new Entitas.EntitasException("Could not set GridEditorService!\n" + this + " already has an entity with svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent!",
                "You should check if the context already has a gridEditorServiceEntity before setting it or use context.ReplaceGridEditorService().");
        }
        var entity = CreateEntity();
        entity.AddGridEditorService(newService);
        return entity;
    }

    public void ReplaceGridEditorService(svanderweele.Mine.Core.Pieces.GridEditor.Service.IGridEditorService newService) {
        var entity = gridEditorServiceEntity;
        if (entity == null) {
            entity = SetGridEditorService(newService);
        } else {
            entity.ReplaceGridEditorService(newService);
        }
    }

    public void RemoveGridEditorService() {
        gridEditorServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent gridEditorService { get { return (svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent)GetComponent(MetaComponentsLookup.GridEditorService); } }
    public bool hasGridEditorService { get { return HasComponent(MetaComponentsLookup.GridEditorService); } }

    public void AddGridEditorService(svanderweele.Mine.Core.Pieces.GridEditor.Service.IGridEditorService newService) {
        var index = MetaComponentsLookup.GridEditorService;
        var component = CreateComponent<svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent>(index);
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceGridEditorService(svanderweele.Mine.Core.Pieces.GridEditor.Service.IGridEditorService newService) {
        var index = MetaComponentsLookup.GridEditorService;
        var component = CreateComponent<svanderweele.Mine.Core.Pieces.GridEditor.Service.GridEditorServiceComponent>(index);
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveGridEditorService() {
        RemoveComponent(MetaComponentsLookup.GridEditorService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherGridEditorService;

    public static Entitas.IMatcher<MetaEntity> GridEditorService {
        get {
            if (_matcherGridEditorService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.GridEditorService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherGridEditorService = matcher;
            }

            return _matcherGridEditorService;
        }
    }
}
